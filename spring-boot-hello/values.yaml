#config-file
namespace: spring-boot-prod

app:
  name: spring-boot-hello
  deploymentName: spring-boot-hello
  deploymentConfigMatch: "spring-boot-hello"
  version: "v1"
  istio: "'true'"
  opentelemetry: "'false'"
  persistentVolumeClaim:
    enabled: false
  vpa:
    enabled: false
    name: spring-boot-hello-vpa

configmap:
  enabled: false
#  items:
#    - name: redis-conf
#      filePath: "files/00-alpine.conf"
#      fileName: 00-alpine.conf
secrets:
  - name: spring-boot-hello-secrets
    keys:
      - name: EXAMPLE_DB_PASS
        encoded: false
        value: "admin"
        
replicaCount: 1

image:
  nameVersion: image-registry.openshift-image-registry.svc:5000/spring-boot-prod/spring-boot-hello:1.0.0
  pullPolicy: Always

imagePullSecrets: []
nameOverride: "spring-boot-hello"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ports:
  - containerPort: 8080

#resources:
#  limits:
#    cpu: 600m
#    memory: 1Gi
#  requests:
#    cpu: 10m
#    memory: 128Mi

environments:
  - name: EXAMPLE_DB_HOST
    value: "postgresql.databases.svc.cluster.local"
  - name: EXAMPLE_DB_PORT
    value: "5432"
  - name: EXAMPLE_DB_PASS
    valueFrom:
      secretKeyRef:
        name: spring-boot-hello-secrets
        key: EXAMPLE_DB_PASS

# service
service:
  type: NodePort
  name: http
  port: 8080
  targetPort: 8080

#readinessProbe:
#  httpGet:
#    path: /actuator/health/readiness
#    port: 8080
#    scheme: HTTP
#  initialDelaySeconds: 20
#  timeoutSeconds: 5
#  periodSeconds: 10
#  successThreshold: 1
#  failureThreshold: 3

#livenessProbe:
#  httpGet:
#    path: /actuator/health/liveness
#    port: 8080
#    scheme: HTTP
#  initialDelaySeconds: 20
#  timeoutSeconds: 5
#  periodSeconds: 10
#  successThreshold: 1
#  failureThreshold: 3
